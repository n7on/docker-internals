#!/bin/bash
set -eo pipefail

platform="amd64"
os="linux"
repo=${1%*:*}
tag=${1#*:*}
images_path="$HOME/.docker-internals/images"
fs_path="$images_path/$repo/$tag"

registry_uri=https://registry-1.docker.io/v2

function die(){
    echo "Error: $1" 1>&2
    exit 1
}

function help(){
    echo "Usage: $(basename $0) <repo>/<image>:<tag>"
    exit 0
}
[[ $1 =~ ^[a-z0-9_-]+/[a-z0-9_-]+:[a-z0-9_-]+$ ]] || help

if ! command -v jq &> /dev/null; then
    die "jq is not installed!"
fi

if [ -d "$fs_path" ];then
    die "Image already downloaded in $fs_path"
fi

function get_token(){
    local url="https://auth.docker.io/token?service=registry.docker.io&scope=repository:$1:pull"

    curl -s "$url" | jq -r '.token'
} 

function get_manifest(){
    local api="application/vnd.docker.distribution.manifest.v2+json"
    local apil="application/vnd.docker.distribution.manifest.list.v2+json"
    local apii="application/vnd.oci.image.manifest.v1+json"
    local url="$registry_uri/$1/manifests/$2"
    
    local resp=$(curl -H "Accept: ${apil}" -H "Accept: ${api}" -H "Accept: ${apii}" -H "Authorization: Bearer $3" -s "$url")

    if echo $resp | jq -e '.errors' > /dev/null; then
        die "Image $repo:$tag doesn't exist!"
    fi

    echo "$resp"
}

function get_layer(){
    local api="application/vnd.oci.image.manifest.v1+json"
    local url="$registry_uri/$1/blobs/$2"

    echo "Downloading layer: ${2#sha256:}"
    curl -L -H "Accept: ${api}" -H "Authorization: Bearer $3" -s "$url" | tar xz -C "$4"
}

token=$(get_token $repo)

resp=$(get_manifest $repo $tag $token)

if echo $resp | jq -e 'has("manifests")' > /dev/null; then
    digest=$(echo $resp | jq -r ".manifests | .[] | select(.platform.architecture == \"${platform}\" and .platform.os == \"${os}\") | .digest")
    resp=$(get_manifest $repo $digest $token)
fi

echo "Downloading to: $fs_path"
mkdir -p "$fs_path"
 echo $resp | jq -r '.layers[] | .digest' | while read l; do
    get_layer $repo $l $token $fs_path
done;