#!/bin/bash
set -eo pipefail

repo=${1%*:*}
tag=${1#*:*}
cmd="$2"
images_path="$HOME/.docker-internals/images"
fs_path="$images_path/$repo/$tag"
repo_path="$images_path/$repo"
container_id=$(uuidgen)
containers_path="$HOME/.docker-internals/containers"
ns_path="$containers_path/$container_id/namespaces"
script_path=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )

function die(){
    echo "Error: $1" 1>&2
    exit 1
}

function help(){
    echo "Usage: $(basename $0) <repo>/<image>:<tag>"
    exit 0
}
[[ $1 =~ ^[a-z0-9_-]+/[a-z0-9_-]+:[a-z0-9_-]+$ ]] || help

[ -n "$cmd" ] || help

if [ ! -d "$fs_path" ];then
    eval "$script_path/image-download $repo:$tag"
fi

# create container namespaces outside container. So namespaces are persisted.
mkdir -p $ns_path
sudo mount --bind $ns_path $ns_path
touch $ns_path/{user,uts,ipc,net,pid,mount}
sudo mount --make-private $ns_path
cd $repo_path

sudo unshare --uts=$ns_path/uts --mount=$ns_path/mount --pid=$ns_path/pid --net=$ns_path/net --ipc=$ns_path/uts --fork bash $script_path/init $tag "${@:2}"

exit 0
